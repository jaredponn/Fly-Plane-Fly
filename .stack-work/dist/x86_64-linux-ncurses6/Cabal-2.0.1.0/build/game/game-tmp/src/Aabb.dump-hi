
==================== FINAL INTERFACE ====================
2018-06-05 00:44:42.267284689 UTC

interface main:Aabb 8022
  interface hash: b82616c9c1fb1a26b2571ce4de97d98f
  ABI hash: b7a7d3159eb6c7bd142ca3a110d80f17
  export-list hash: 9db632369713723d5116f71697687a26
  orphan hash: b0acb04a8c88cb8f146778097bfb13ca
  flag hash: c3d080cdf3a45f880096629af0ba9355
  sig of: Nothing
  used TH splices: False
  where
exports:
  Aabb.aabbToRectangle
  Aabb.addCushiontoAabb
  Aabb.ceilingAabb
  Aabb.floorAabb
  Aabb.hitTest
  Aabb.hitTestAbove
  Aabb.hitTestBelow
  Aabb.pointHitTest
  Aabb.rectangleToAabb
  Aabb.shiftAabb
  Aabb.Aabb{Aabb.Aabb pMax pMin}
module dependencies:
package dependencies: StateVar-1.1.1.0 adjunctions-4.4
                      array-0.5.2.0 base-4.10.1.0 base-orphans-0.7 bifunctors-5.5.2
                      binary-0.8.5.1 bytes-0.15.4 bytestring-0.10.8.2 call-stack-0.1.0
                      cereal-0.5.5.0 comonad-5.0.3 containers-0.5.10.2
                      contravariant-1.4.1 deepseq-1.4.3.0 distributive-0.5.3
                      exceptions-0.8.3 free-5.0.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      kan-extensions-5.1 lens-4.16.1 linear-1.20.7 mtl-2.2.2
                      pretty-1.1.3.3 primitive-0.6.3.0 profunctors-5.2.2 reflection-2.1.3
                      scientific-0.3.6.0 sdl2-2.4.0.1 semigroupoids-5.2.2 stm-2.4.5.0
                      tagged-0.8.5 template-haskell-2.12.0.0 text-1.2.3.0
                      th-abstraction-0.2.6.0 time-1.8.0.2 transformers-0.5.2.0
                      transformers-base-0.4.4 transformers-compat-0.5.1.4
                      unordered-containers-0.2.9.0 vector-0.12.0.1
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.3:Data.Reflection
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         linear-1.20.7:Linear.Instances base-orphans-0.7:Data.Orphans
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats bifunctors-5.5.2:Data.Bifunctor.Biff
                         bifunctors-5.5.2:Data.Bifunctor.Clown
                         bifunctors-5.5.2:Data.Bifunctor.Fix
                         bifunctors-5.5.2:Data.Bifunctor.Flip
                         bifunctors-5.5.2:Data.Bifunctor.Join
                         bifunctors-5.5.2:Data.Bifunctor.Joker
                         bifunctors-5.5.2:Data.Bifunctor.Product
                         bifunctors-5.5.2:Data.Bifunctor.Sum
                         bifunctors-5.5.2:Data.Bifunctor.Tannen
                         bifunctors-5.5.2:Data.Bifunctor.Wrapped bytes-0.15.4:Data.Bytes.Get
                         bytes-0.15.4:Data.Bytes.Signed bytes-0.15.4:Data.Bytes.VarInt
                         containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         free-5.0.2:Control.Comonad.Cofree
                         free-5.0.2:Control.Comonad.Trans.Cofree
                         free-5.0.2:Control.Monad.Free free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.1:Data.Functor.Day
                         kan-extensions-5.1:Data.Functor.Yoneda lens-4.16.1:Control.Lens.At
                         lens-4.16.1:Control.Lens.Internal.Indexed
                         lens-4.16.1:Control.Lens.Reified lens-4.16.1:Control.Lens.Tuple
                         lens-4.16.1:Control.Lens.Wrapped lens-4.16.1:Control.Lens.Zoom
                         linear-1.20.7:Linear.Affine linear-1.20.7:Linear.Plucker
                         linear-1.20.7:Linear.Quaternion linear-1.20.7:Linear.V
                         linear-1.20.7:Linear.V0 linear-1.20.7:Linear.V1
                         linear-1.20.7:Linear.V2 linear-1.20.7:Linear.V3
                         linear-1.20.7:Linear.V4
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep sdl2-2.4.0.1:SDL.Audio
                         sdl2-2.4.0.1:SDL.Event sdl2-2.4.0.1:SDL.Exception
                         sdl2-2.4.0.1:SDL.Hint sdl2-2.4.0.1:SDL.Init
                         sdl2-2.4.0.1:SDL.Input.GameController
                         sdl2-2.4.0.1:SDL.Input.Joystick sdl2-2.4.0.1:SDL.Input.Keyboard
                         sdl2-2.4.0.1:SDL.Input.Keyboard.Codes sdl2-2.4.0.1:SDL.Input.Mouse
                         sdl2-2.4.0.1:SDL.Internal.Types sdl2-2.4.0.1:SDL.Power
                         sdl2-2.4.0.1:SDL.Time sdl2-2.4.0.1:SDL.Video
                         sdl2-2.4.0.1:SDL.Video.OpenGL sdl2-2.4.0.1:SDL.Video.Renderer
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.6.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:GHC.Show 0a8ce2b5e533d1c2cfb7954e6736be45
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  linear-1.20.7:Linear.Affine f4ed1aa58b28d63beac82829593554b3
import  -/  linear-1.20.7:Linear.V2 ee409e3e067ada9faf9fdda331749bf4
import  -/  sdl2-2.4.0.1:SDL 24b907aeafb5c6d95ad8ce8f19ccd6b3
import  -/  sdl2-2.4.0.1:SDL.Video.Renderer 05fa9f919fc1b42de89d6ed9d3439937
4bc4d1c45ad2d3871f1050d664e236c2
  $fShowAabb :: GHC.Show.Show Aabb.Aabb
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Aabb.Aabb
                  Aabb.$fShowAabb_$cshowsPrec
                  Aabb.$fShowAabb_$cshow
                  Aabb.$fShowAabb_$cshowList -}
4bc4d1c45ad2d3871f1050d664e236c2
  $fShowAabb1 :: Aabb.Aabb -> GHC.Show.ShowS
  {- Arity: 1, Strictness: <S(SSSS),1*U(U,U,U,U)>,
     Unfolding: (\ (w :: Aabb.Aabb) ->
                 case w of ww { Aabb.Aabb ww1 ww2 ww3 ww4 ->
                 Aabb.$w$cshowsPrec 0# ww1 ww2 ww3 ww4 }) -}
91d0400eead872392c62974687bd7b32
  $fShowAabb2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("}"#) -}
7d2acb79251260395a203515b295e602
  $fShowAabb3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pMax = "#) -}
a7775f91d64be2a1dec9a3554ea86392
  $fShowAabb4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("pMin = "#) -}
51bfe368ab22ff0030157403245742ba
  $fShowAabb5 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Aabb {"#) -}
9fddcbe4240b2bbb4d0636ca9fb275f9
  $fShowAabb6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
4bc4d1c45ad2d3871f1050d664e236c2
  $fShowAabb_$cshow :: Aabb.Aabb -> GHC.Base.String
  {- Arity: 1, Strictness: <S(SSSS),1*U(U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: Aabb.Aabb) ->
                 Aabb.$fShowAabb_$cshowsPrec
                   Aabb.$fShowAabb6
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4bc4d1c45ad2d3871f1050d664e236c2
  $fShowAabb_$cshowList :: [Aabb.Aabb] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Aabb.Aabb Aabb.$fShowAabb1) -}
4bc4d1c45ad2d3871f1050d664e236c2
  $fShowAabb_$cshowsPrec ::
    GHC.Types.Int -> Aabb.Aabb -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S(SSSS),1*U(U,U,U,U)>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Aabb.Aabb) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Aabb.Aabb ww3 ww4 ww5 ww6 ->
                 Aabb.$w$cshowsPrec ww1 ww3 ww4 ww5 ww6 } }) -}
3e8e0bf62077741424d83d17cc76a88b
  $fShowAabb_$s$fShowV2 ::
    GHC.Show.Show (Linear.V2.V2 GHC.Types.Float)
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ (Linear.V2.V2 GHC.Types.Float)
                  (Linear.V2.$fShowV2_$cshowsPrec
                     @ GHC.Types.Float
                     GHC.Float.$fShowFloat)
                  (\ (eta :: Linear.V2.V2 GHC.Types.Float) ->
                   Linear.V2.$fShowV2_$cshowsPrec
                     @ GHC.Types.Float
                     GHC.Float.$fShowFloat
                     Linear.V2.$fRead1V3
                     eta
                     (GHC.Types.[] @ GHC.Types.Char))
                  (\ (eta :: [Linear.V2.V2 GHC.Types.Float])
                     (eta1 :: GHC.Base.String) ->
                   GHC.Show.showList__
                     @ (Linear.V2.V2 GHC.Types.Float)
                     (Linear.V2.$fShowV2_$cshowsPrec
                        @ GHC.Types.Float
                        GHC.Float.$fShowFloat
                        Linear.V2.$fRead1V3)
                     eta
                     eta1) -}
86d0f034e8768a3ddccf38a7198d65a6
  $tc'Aabb :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2707025778638761710##
                   16343506541943209627##
                   Aabb.$trModule
                   Aabb.$tc'Aabb2
                   0#
                   Aabb.$tc'Aabb1) -}
89145c629145574857093ad62603df1c
  $tc'Aabb1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
60e1cea61d4985aacdaac6ee743554a7
  $tc'Aabb2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Aabb.$tc'Aabb3) -}
c71fe4db65630c0e49012468c2682446
  $tc'Aabb3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Aabb"#) -}
9f0fcfaea859c82ffdd3787a841ac1f9
  $tcAabb :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14661091906059454934##
                   9084186221938285751##
                   Aabb.$trModule
                   Aabb.$trModule1
                   0#
                   GHC.Types.krep$*) -}
047f67b7d7b832758525c4d3281962b8
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Aabb.$trModule3 Aabb.$trModule1) -}
b761ab3c4ed0d29fab9ad7412b4064d4
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Aabb.$trModule2) -}
b045d2021ceb0a8e4f7e69d1b1c70dab
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Aabb"#) -}
b289de6e185278fb37ab090020380691
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Aabb.$trModule4) -}
d9b372789cb6e5197ee98a74578400b0
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
a7958ab9631ad23d98fe3798e6fda9c4
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> GHC.Types.Float
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <S,U><L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Types.Float)
                   (ww2 :: GHC.Types.Float)
                   (ww3 :: GHC.Types.Float)
                   (ww4 :: GHC.Types.Float) ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = Linear.Affine.$w$cshowsPrec
                       @ Linear.V2.V2
                       @ GHC.Types.Float
                       Aabb.$fShowAabb_$s$fShowV2
                       0#
                       (Linear.V2.V2 @ GHC.Types.Float ww1 ww2)
                         `cast`
                       (Sym (Linear.Affine.N:Point[0]
                                 <Linear.V2.V2>_R) <GHC.Types.Float>_N)
                 } in
                 let {
                   f1 :: GHC.Base.String -> GHC.Base.String
                   = Linear.Affine.$w$cshowsPrec
                       @ Linear.V2.V2
                       @ GHC.Types.Float
                       Aabb.$fShowAabb_$s$fShowV2
                       0#
                       (Linear.V2.V2 @ GHC.Types.Float ww3 ww4)
                         `cast`
                       (Sym (Linear.Affine.N:Point[0]
                                 <Linear.V2.V2>_R) <GHC.Types.Float>_N)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.CString.unpackAppendCString#
                        Aabb.$fShowAabb5
                        (GHC.CString.unpackAppendCString#
                           Aabb.$fShowAabb4
                           (f (GHC.Base.++
                                 @ GHC.Types.Char
                                 GHC.Show.showCommaSpace1
                                 (GHC.CString.unpackAppendCString#
                                    Aabb.$fShowAabb3
                                    (f1 (GHC.CString.unpackAppendCString# Aabb.$fShowAabb2 x))))))
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.$fShow(,)4
                        (GHC.CString.unpackAppendCString#
                           Aabb.$fShowAabb5
                           (GHC.CString.unpackAppendCString#
                              Aabb.$fShowAabb4
                              (f (GHC.Base.++
                                    @ GHC.Types.Char
                                    GHC.Show.showCommaSpace1
                                    (GHC.CString.unpackAppendCString#
                                       Aabb.$fShowAabb3
                                       (f1
                                          (GHC.CString.unpackAppendCString#
                                             Aabb.$fShowAabb2
                                             (GHC.Types.:
                                                @ GHC.Types.Char
                                                GHC.Show.$fShow(,)2
                                                x)))))))) }) -}
4bc4d1c45ad2d3871f1050d664e236c2
  data Aabb
    = Aabb {pMin :: ! {-# UNPACK #-}(Linear.Affine.N:Point[0]
                                         <Linear.V2.V2>_R <GHC.Types.Float>_N)Linear.Affine.Point
                                                                                Linear.V2.V2
                                                                                GHC.Types.Float,
            pMax :: ! {-# UNPACK #-}(Linear.Affine.N:Point[0]
                                         <Linear.V2.V2>_R <GHC.Types.Float>_N)Linear.Affine.Point
                                                                                Linear.V2.V2
                                                                                GHC.Types.Float}
a013c5a0e0aff215b89a8afb6e04557e
  aabbToRectangle ::
    Aabb.Aabb -> SDL.Video.Renderer.Rectangle GHC.Types.Float
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SSSS),1*U(U(U),U(U),U(U),U(U))>m, Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Aabb.Aabb) ->
                 case w of ww { Aabb.Aabb ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.F# ww6 ->
                 case ww2 of ww7 { GHC.Types.F# ww8 ->
                 case ww3 of ww9 { GHC.Types.F# ww10 ->
                 case ww4 of ww11 { GHC.Types.F# ww12 ->
                 SDL.Video.Renderer.Rectangle
                   @ GHC.Types.Float
                   (Linear.V2.V2
                      @ GHC.Types.Float
                      (GHC.Types.F# ww6)
                      (GHC.Types.F# ww8))
                     `cast`
                   (Sym (Linear.Affine.N:Point[0]
                             <Linear.V2.V2>_R) <GHC.Types.Float>_N)
                   (Linear.V2.V2
                      @ GHC.Types.Float
                      (GHC.Types.F# (GHC.Prim.minusFloat# ww10 ww6))
                      (GHC.Types.F# (GHC.Prim.minusFloat# ww12 ww8))) } } } } }) -}
4e12a7a1ca48d93fb91b42fe754fe4f1
  addCushiontoAabb ::
    Linear.V2.V2 GHC.Types.Float -> Aabb.Aabb -> Aabb.Aabb
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U(U),U(U))><S(SSSL),1*U(U(U),U(U),U(U),A)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Linear.V2.V2 GHC.Types.Float) (w1 :: Aabb.Aabb) ->
                 case w of ww { Linear.V2.V2 ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.F# ww4 ->
                 case ww2 of ww5 { GHC.Types.F# ww6 ->
                 case w1 of ww7 { Aabb.Aabb ww8 ww9 ww10 ww11 ->
                 case ww8 of ww12 { GHC.Types.F# ww13 ->
                 case ww9 of ww14 { GHC.Types.F# ww15 ->
                 case ww10 of ww16 { GHC.Types.F# ww17 ->
                 Aabb.Aabb
                   (GHC.Types.F# (GHC.Prim.minusFloat# ww13 ww4))
                   (GHC.Types.F# (GHC.Prim.minusFloat# ww15 ww6))
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww17 ww4))
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww15 ww6)) } } } } } } }) -}
1ba3ef3c8c0c371877b206b3c919194f
  ceilingAabb :: Aabb.Aabb -> Aabb.Aabb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSSL),1*U(U,U,U,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Aabb.Aabb) ->
                 case ds of wild { Aabb.Aabb dt dt1 dt2 dt3 ->
                 Aabb.Aabb dt dt1 dt2 dt1 }) -}
478629363c5055b2d6751d56dfc2a997
  floorAabb :: Aabb.Aabb -> Aabb.Aabb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLSS),1*U(U,A,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Aabb.Aabb) ->
                 case ds of wild { Aabb.Aabb dt dt1 dt2 dt3 ->
                 Aabb.Aabb dt dt3 dt2 dt3 }) -}
e81da0c7b38bba1e8952c6a0149b2f5d
  hitTest :: Aabb.Aabb -> Aabb.Aabb -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)SSS),1*U(U(U),U(U),U(U),U(U))><S(SSS(S)S),1*U(U(U),U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Aabb.Aabb) (w1 :: Aabb.Aabb) ->
                 case w of ww { Aabb.Aabb ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.F# ww6 ->
                 case ww2 of ww7 { GHC.Types.F# ww8 ->
                 case ww3 of ww9 { GHC.Types.F# ww10 ->
                 case ww4 of ww11 { GHC.Types.F# ww12 ->
                 case w1 of ww13 { Aabb.Aabb ww14 ww15 ww16 ww17 ->
                 case ww14 of ww18 { GHC.Types.F# ww19 ->
                 case ww15 of ww20 { GHC.Types.F# ww21 ->
                 case ww16 of ww22 { GHC.Types.F# ww23 ->
                 case ww17 of ww24 { GHC.Types.F# ww25 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.leFloat# ww6 ww23) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.geFloat# ww10 ww19) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leFloat# ww8 ww25) of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geFloat# ww12 ww21) } } } } } } } } } } } } }) -}
9ed9dee95f74560c95d02c5273993c59
  hitTestAbove :: Aabb.Aabb -> Aabb.Aabb -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)SSS),1*U(U(U),U(U),U(U),U(U))><S(SSS(S)S),1*U(U(U),U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Aabb.Aabb) (w1 :: Aabb.Aabb) ->
                 case w of ww { Aabb.Aabb ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.F# ww6 ->
                 case ww2 of ww7 { GHC.Types.F# ww8 ->
                 case ww3 of ww9 { GHC.Types.F# ww10 ->
                 case ww4 of ww11 { GHC.Types.F# ww12 ->
                 case w1 of ww13 { Aabb.Aabb ww14 ww15 ww16 ww17 ->
                 case ww14 of ww18 { GHC.Types.F# ww19 ->
                 case ww15 of ww20 { GHC.Types.F# ww21 ->
                 case ww16 of ww22 { GHC.Types.F# ww23 ->
                 case ww17 of ww24 { GHC.Types.F# ww25 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.leFloat# ww6 ww23) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.geFloat# ww10 ww19) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leFloat# ww8 ww21) of wild2 {
                             GHC.Types.False
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leFloat# ww12 ww25)
                             GHC.Types.True -> GHC.Types.True } } } } } } } } } } } } }) -}
d23345d5ff2b0ba76d5f27cd5cd9d34a
  hitTestBelow :: Aabb.Aabb -> Aabb.Aabb -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)SSS),1*U(U(U),U(U),U(U),U(U))><S(SSS(S)S),1*U(U(U),U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Aabb.Aabb) (w1 :: Aabb.Aabb) ->
                 case w of ww { Aabb.Aabb ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { GHC.Types.F# ww6 ->
                 case ww2 of ww7 { GHC.Types.F# ww8 ->
                 case ww3 of ww9 { GHC.Types.F# ww10 ->
                 case ww4 of ww11 { GHC.Types.F# ww12 ->
                 case w1 of ww13 { Aabb.Aabb ww14 ww15 ww16 ww17 ->
                 case ww14 of ww18 { GHC.Types.F# ww19 ->
                 case ww15 of ww20 { GHC.Types.F# ww21 ->
                 case ww16 of ww22 { GHC.Types.F# ww23 ->
                 case ww17 of ww24 { GHC.Types.F# ww25 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.leFloat# ww6 ww23) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.geFloat# ww10 ww19) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geFloat# ww8 ww21) of wild2 {
                             GHC.Types.False
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geFloat# ww12 ww25)
                             GHC.Types.True -> GHC.Types.True } } } } } } } } } } } } }) -}
4bc4d1c45ad2d3871f1050d664e236c2
  pMax ::
    Aabb.Aabb -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Float
  RecSel Left Aabb.Aabb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSS),1*U(A,A,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Aabb.Aabb) ->
                 case ds of wild { Aabb.Aabb dt dt1 dt2 dt3 ->
                 (Linear.V2.V2 @ GHC.Types.Float dt2 dt3)
                   `cast`
                 (Sym (Linear.Affine.N:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Float>_N) }) -}
4bc4d1c45ad2d3871f1050d664e236c2
  pMin ::
    Aabb.Aabb -> Linear.Affine.Point Linear.V2.V2 GHC.Types.Float
  RecSel Left Aabb.Aabb
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SSLL),1*U(U,U,A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Aabb.Aabb) ->
                 case ds of wild { Aabb.Aabb dt dt1 dt2 dt3 ->
                 (Linear.V2.V2 @ GHC.Types.Float dt dt1)
                   `cast`
                 (Sym (Linear.Affine.N:Point[0]
                           <Linear.V2.V2>_R) <GHC.Types.Float>_N) }) -}
2525c64f7376fe813a21fdf5183f73dd
  pointHitTest ::
    Linear.Affine.Point Linear.V2.V2 GHC.Types.Float
    -> Aabb.Aabb -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(S)S),1*U(U(U),U(U))><S(S(S)SSS),1*U(U(U),U(U),U(U),U(U))>,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Linear.Affine.Point Linear.V2.V2 GHC.Types.Float)
                   (w1 :: Aabb.Aabb) ->
                 case w `cast`
                      (Linear.Affine.N:Point[0]
                           <Linear.V2.V2>_R <GHC.Types.Float>_N) of ww { Linear.V2.V2 ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.F# ww4 ->
                 case ww2 of ww5 { GHC.Types.F# ww6 ->
                 case w1 of ww7 { Aabb.Aabb ww8 ww9 ww10 ww11 ->
                 case ww8 of ww12 { GHC.Types.F# ww13 ->
                 case ww9 of ww14 { GHC.Types.F# ww15 ->
                 case ww10 of ww16 { GHC.Types.F# ww17 ->
                 case ww11 of ww18 { GHC.Types.F# ww19 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.geFloat# ww4 ww13) of wild {
                   GHC.Types.False -> GHC.Types.False
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.leFloat# ww4 ww17) of wild1 {
                        GHC.Types.False -> GHC.Types.False
                        GHC.Types.True
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.geFloat# ww6 ww15) of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leFloat# ww6 ww19) } } } } } } } } } } }) -}
4601f07974c6b4c563a1e869ff1fdd84
  rectangleToAabb ::
    SDL.Video.Renderer.Rectangle GHC.Types.Float -> Aabb.Aabb
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(S(SS)S(SS)),1*U(1*U(U(U),U(U)),1*U(U(U),U(U)))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: SDL.Video.Renderer.Rectangle GHC.Types.Float) ->
                 case w of ww { SDL.Video.Renderer.Rectangle ww1 ww2 ->
                 case ww1
                        `cast`
                      (Linear.Affine.N:Point[0]
                           <Linear.V2.V2>_R <GHC.Types.Float>_N) of ww3 { Linear.V2.V2 ww4 ww5 ->
                 case ww4 of ww6 { GHC.Types.F# ww7 ->
                 case ww5 of ww8 { GHC.Types.F# ww9 ->
                 case ww2 of ww10 { Linear.V2.V2 ww11 ww12 ->
                 case ww11 of ww13 { GHC.Types.F# ww14 ->
                 case ww12 of ww15 { GHC.Types.F# ww16 ->
                 Aabb.Aabb
                   (GHC.Types.F# ww7)
                   (GHC.Types.F# ww9)
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww7 ww14))
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww9 ww16)) } } } } } } }) -}
8476ef5074ef8ca67cd7c9d51f04423a
  shiftAabb :: Linear.V2.V2 GHC.Types.Float -> Aabb.Aabb -> Aabb.Aabb
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SS),1*U(U(U),U(U))><S(SSSL),1*U(U(U),U(U),U(U),A)>m,
     Inline: [0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Linear.V2.V2 GHC.Types.Float) (w1 :: Aabb.Aabb) ->
                 case w of ww { Linear.V2.V2 ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.F# ww4 ->
                 case ww2 of ww5 { GHC.Types.F# ww6 ->
                 case w1 of ww7 { Aabb.Aabb ww8 ww9 ww10 ww11 ->
                 case ww8 of ww12 { GHC.Types.F# ww13 ->
                 case ww9 of ww14 { GHC.Types.F# ww15 ->
                 case ww10 of ww16 { GHC.Types.F# ww17 ->
                 Aabb.Aabb
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww13 ww4))
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww15 ww6))
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww17 ww4))
                   (GHC.Types.F# (GHC.Prim.plusFloat# ww15 ww6)) } } } } } } }) -}
instance GHC.Show.Show [Aabb.Aabb] = Aabb.$fShowAabb
"SPEC/Aabb $fShowV2 @ Float" [orphan] forall (v :: GHC.Show.Show
                                                     GHC.Types.Float)
  Linear.V2.$fShowV2 @ GHC.Types.Float v = Aabb.$fShowAabb_$s$fShowV2
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

