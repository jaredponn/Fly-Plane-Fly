
==================== FINAL INTERFACE ====================
2018-06-04 17:00:35.332483888 UTC

interface main:Util [hpc] 8022
  interface hash: 1eaaffd5236ea84962eb5aa75a61ab95
  ABI hash: 106981bc01870b6f40182711259e7416
  export-list hash: f61f30242ab7d3539a806c19f4b8d83f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 252e2e51efdfaca011fc25a9634d1926
  sig of: Nothing
  used TH splices: False
  where
exports:
  Util.convertToSeconds
  Util.roundV2
  Util.Time
module dependencies: Aabb
package dependencies: StateVar-1.1.1.0 adjunctions-4.4
                      array-0.5.2.0 base-4.10.1.0 base-orphans-0.7 bifunctors-5.5.2
                      binary-0.8.5.1 bytes-0.15.4 bytestring-0.10.8.2 call-stack-0.1.0
                      cereal-0.5.5.0 clock-0.7.2 comonad-5.0.3 containers-0.5.10.2
                      contravariant-1.4.1 deepseq-1.4.3.0 distributive-0.5.3
                      exceptions-0.8.3 free-5.0.2 ghc-boot-th-8.2.2 ghc-prim-0.5.1.1
                      hashable-1.2.7.0 integer-gmp-1.0.1.0 integer-logarithms-1.0.2.1
                      kan-extensions-5.1 lens-4.16.1 linear-1.20.7 mtl-2.2.2
                      pretty-1.1.3.3 primitive-0.6.3.0 profunctors-5.2.2 reflection-2.1.3
                      scientific-0.3.6.0 sdl2-2.4.0.1 semigroupoids-5.2.2 stm-2.4.5.0
                      tagged-0.8.5 template-haskell-2.12.0.0 text-1.2.3.0
                      th-abstraction-0.2.6.0 time-1.8.0.2 transformers-0.5.2.0
                      transformers-base-0.4.4 transformers-compat-0.5.1.4
                      unordered-containers-0.2.9.0 vector-0.12.0.1
orphans: time-1.8.0.2:Data.Time.Clock.TAI
         time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian
         reflection-2.1.3:Data.Reflection
         vector-0.12.0.1:Data.Vector.Unboxed
         hashable-1.2.7.0:Data.Hashable.Generic text-1.2.3.0:Data.Text.Lazy
         linear-1.20.7:Linear.Instances base-orphans-0.7:Data.Orphans
         text-1.2.3.0:Data.Text binary-0.8.5.1:Data.Binary.Generic
         text-1.2.3.0:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder
         vector-0.12.0.1:Data.Vector.Fusion.Bundle
         stm-2.4.5.0:Control.Monad.STM
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: adjunctions-4.4:Data.Functor.Rep
                         base-4.10.1.0:Control.Applicative base-4.10.1.0:Data.Complex
                         base-4.10.1.0:Data.Either base-4.10.1.0:Data.Functor.Compose
                         base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats bifunctors-5.5.2:Data.Bifunctor.Biff
                         bifunctors-5.5.2:Data.Bifunctor.Clown
                         bifunctors-5.5.2:Data.Bifunctor.Fix
                         bifunctors-5.5.2:Data.Bifunctor.Flip
                         bifunctors-5.5.2:Data.Bifunctor.Join
                         bifunctors-5.5.2:Data.Bifunctor.Joker
                         bifunctors-5.5.2:Data.Bifunctor.Product
                         bifunctors-5.5.2:Data.Bifunctor.Sum
                         bifunctors-5.5.2:Data.Bifunctor.Tannen
                         bifunctors-5.5.2:Data.Bifunctor.Wrapped bytes-0.15.4:Data.Bytes.Get
                         bytes-0.15.4:Data.Bytes.Signed bytes-0.15.4:Data.Bytes.VarInt
                         clock-0.7.2:System.Clock containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         free-5.0.2:Control.Comonad.Cofree
                         free-5.0.2:Control.Comonad.Trans.Cofree
                         free-5.0.2:Control.Monad.Free free-5.0.2:Control.Monad.Trans.Free
                         ghc-boot-th-8.2.2:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.2.2:GHC.LanguageExtensions.Type
                         kan-extensions-5.1:Data.Functor.Day
                         kan-extensions-5.1:Data.Functor.Yoneda lens-4.16.1:Control.Lens.At
                         lens-4.16.1:Control.Lens.Internal.Indexed
                         lens-4.16.1:Control.Lens.Reified lens-4.16.1:Control.Lens.Tuple
                         lens-4.16.1:Control.Lens.Wrapped lens-4.16.1:Control.Lens.Zoom
                         linear-1.20.7:Linear.Affine linear-1.20.7:Linear.Plucker
                         linear-1.20.7:Linear.Quaternion linear-1.20.7:Linear.V
                         linear-1.20.7:Linear.V0 linear-1.20.7:Linear.V1
                         linear-1.20.7:Linear.V2 linear-1.20.7:Linear.V3
                         linear-1.20.7:Linear.V4
                         pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array
                         primitive-0.6.3.0:Data.Primitive.ByteArray
                         profunctors-5.2.2:Data.Profunctor.Composition
                         profunctors-5.2.2:Data.Profunctor.Rep sdl2-2.4.0.1:SDL.Audio
                         sdl2-2.4.0.1:SDL.Event sdl2-2.4.0.1:SDL.Exception
                         sdl2-2.4.0.1:SDL.Hint sdl2-2.4.0.1:SDL.Init
                         sdl2-2.4.0.1:SDL.Input.GameController
                         sdl2-2.4.0.1:SDL.Input.Joystick sdl2-2.4.0.1:SDL.Input.Keyboard
                         sdl2-2.4.0.1:SDL.Input.Keyboard.Codes sdl2-2.4.0.1:SDL.Input.Mouse
                         sdl2-2.4.0.1:SDL.Internal.Types sdl2-2.4.0.1:SDL.Power
                         sdl2-2.4.0.1:SDL.Time sdl2-2.4.0.1:SDL.Video
                         sdl2-2.4.0.1:SDL.Video.OpenGL sdl2-2.4.0.1:SDL.Video.Renderer
                         tagged-0.8.5:Data.Tagged
                         template-haskell-2.12.0.0:Language.Haskell.TH.Syntax
                         text-1.2.3.0:Data.Text text-1.2.3.0:Data.Text.Lazy
                         th-abstraction-0.2.6.0:Language.Haskell.TH.Datatype
                         unordered-containers-0.2.9.0:Data.HashMap.Base
                         unordered-containers-0.2.9.0:Data.HashSet
                         vector-0.12.0.1:Data.Vector vector-0.12.0.1:Data.Vector.Primitive
                         vector-0.12.0.1:Data.Vector.Storable
                         vector-0.12.0.1:Data.Vector.Unboxed
                         vector-0.12.0.1:Data.Vector.Unboxed.Base
import  -/  base-4.10.1.0:Foreign.C.Types 936c0db027291520097b61fd8686710a
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.Real 3c62834bc25e762eabc44149c4cc142d
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  clock-0.7.2:System.Clock bc880f7c79f0de332c5b2f6eb1008f46
import  -/  linear-1.20.7:Linear.V2 e87779d762688f70d36f27b366e56018
import  -/  Aabb 2c0af13250239aca55f38b7395535cc8
  exports: a854e68b54afb90233efb6db6d076340
928878a57c429fe8ad8008c5ec64b283
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Util.$trModule3 Util.$trModule1) -}
0988517583cc5ccb8afa6c146c72f882
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Util.$trModule2) -}
4220cb834f74fcbb9d71d0d4ca84b764
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Util"#) -}
37d913d0d1bf3900345efc1609c6737b
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Util.$trModule4) -}
f8adc5a478af1e43217e228de2156d6f
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
44a60084147866a451d7236c4b593b33
  type Time = GHC.Types.Float
cc6ec649e0102574cb6af963bba7886b
  convertToSeconds :: System.Clock.TimeSpec -> GHC.Types.Float
  {- Unfolding: ({__scc {main:Util.convertToSeconds} True False} \ (x :: System.Clock.TimeSpec) ->
                                                                 {__scc {main:Util.convertToSeconds} False True} case x of ww { System.Clock.TimeSpec ww1 ww2 ->
                                                                                                                 case GHC.Integer.Type.doubleFromInteger
                                                                                                                        (System.Clock.$wtoNanoSecs
                                                                                                                           ww1
                                                                                                                           ww2) of wild2 { DEFAULT ->
                                                                                                                 GHC.Types.F#
                                                                                                                   (GHC.Prim.divideFloat#
                                                                                                                      (GHC.Prim.double2Float#
                                                                                                                         wild2)
                                                                                                                      1.0e9#) } }) -}
8be8877b378edb0df1e66aa85f0b3cdf
  roundV2 ::
    Linear.V2.V2 GHC.Types.Float -> Linear.V2.V2 Foreign.C.Types.CInt
  {- Arity: 1, Strictness: <S(S(S)S(S)),1*U(U(U),U(U))>m,
     Inline: [0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: Linear.V2.V2 GHC.Types.Float) ->
                 case w of ww { Linear.V2.V2 ww1 ww2 ->
                 case ww1 of ww3 { GHC.Types.F# ww4 ->
                 case ww2 of ww5 { GHC.Types.F# ww6 ->
                 {__scc {main:Util.roundV2} True False} case {__scc {main:Util.roundV2} False True} GHC.Float.$w$cround1
                                                                                                      @ GHC.Types.Int
                                                                                                      GHC.Real.$fIntegralInt
                                                                                                      ww4 of wild { GHC.Types.I# x# ->
                                                        case {__scc {main:Util.roundV2} False True} GHC.Float.$w$cround1
                                                                                                      @ GHC.Types.Int
                                                                                                      GHC.Real.$fIntegralInt
                                                                                                      ww6 of wild1 { GHC.Types.I# x#1 ->
                                                        Linear.V2.V2
                                                          @ Foreign.C.Types.CInt
                                                          (GHC.Int.I32#
                                                             ({__scc {main:Util.roundV2} False True} GHC.Prim.narrow32Int#
                                                                                                       x#))
                                                            `cast`
                                                          (Sym (Foreign.C.Types.N:CInt[0]))
                                                          (GHC.Int.I32#
                                                             ({__scc {main:Util.roundV2} False True} GHC.Prim.narrow32Int#
                                                                                                       x#1))
                                                            `cast`
                                                          (Sym (Foreign.C.Types.N:CInt[0])) } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

