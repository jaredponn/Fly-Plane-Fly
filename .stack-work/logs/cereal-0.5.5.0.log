Configuring cereal-0.5.5.0...
Preprocessing library for cereal-0.5.5.0..
Building library for cereal-0.5.5.0..
[1 of 4] Compiling Data.Serialize.Get ( src/Data/Serialize/Get.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize/Get.o )
[2 of 4] Compiling Data.Serialize.Put ( src/Data/Serialize/Put.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize/Put.o )

[;1msrc/Data/Serialize/Put.hs:103:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The qualified import of â€˜Data.Monoidâ€™ is redundant
      except perhaps to import instances from â€˜Data.Monoidâ€™
    To import instances alone, use: import Data.Monoid()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m103 |[0m[0m [;1m[35mimport qualified Data.Monoid as M[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[3 of 4] Compiling Data.Serialize.IEEE754 ( src/Data/Serialize/IEEE754.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize/IEEE754.o )
[4 of 4] Compiling Data.Serialize   ( src/Data/Serialize.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize.o )

[;1msrc/Data/Serialize.hs:290:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wincomplete-patterns[0m[0m[;1m][0m[0m[;1m
    Pattern match(es) are non-exhaustive
    In an equation for â€˜findNrâ€™: Patterns not matched: _ _[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m290 |[0m[0m         [;1m[35mfindNr lo hi[0m[0m
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[1 of 4] Compiling Data.Serialize.Get ( src/Data/Serialize/Get.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize/Get.p_o )
[2 of 4] Compiling Data.Serialize.Put ( src/Data/Serialize/Put.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize/Put.p_o )

[;1msrc/Data/Serialize/Put.hs:103:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The qualified import of â€˜Data.Monoidâ€™ is redundant
      except perhaps to import instances from â€˜Data.Monoidâ€™
    To import instances alone, use: import Data.Monoid()[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m103 |[0m[0m [;1m[35mimport qualified Data.Monoid as M[0m[0m
[;1m[34m    |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[3 of 4] Compiling Data.Serialize.IEEE754 ( src/Data/Serialize/IEEE754.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize/IEEE754.p_o )
[4 of 4] Compiling Data.Serialize   ( src/Data/Serialize.hs, .stack-work/dist/x86_64-linux-ncurses6/Cabal-2.0.1.0/build/Data/Serialize.p_o )

[;1msrc/Data/Serialize.hs:290:9: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wincomplete-patterns[0m[0m[;1m][0m[0m[;1m
    Pattern match(es) are non-exhaustive
    In an equation for â€˜findNrâ€™: Patterns not matched: _ _[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m290 |[0m[0m         [;1m[35mfindNr lo hi[0m[0m
[;1m[34m    |[0m[0m[;1m[35m         ^^^^^^^^^^^^...[0m[0m
[0m[0m[0mInstalling library in /home/jared/.stack/snapshots/x86_64-linux-ncurses6/lts-11.8/8.2.2/lib/x86_64-linux-ghc-8.2.2/cereal-0.5.5.0-LlCRTX2XyPnC6qdZ6C2b02
Registering library for cereal-0.5.5.0..
